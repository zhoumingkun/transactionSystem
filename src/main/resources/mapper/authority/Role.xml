<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toughguy.transactionSystem.model.authority.Role">
	<!-- 存储某个角色 -->
	<insert id="save" parameterType="Role" keyProperty="id" useGeneratedKeys="true">
		insert into auth_role (guid, createTime,updateTime,roleName, displayName,roleExtendPId,roleRelyId,roleMaxNum,remarks) 
		values (#{guid}, #{createTime},#{updateTime},#{roleName},#{displayName}, #{roleExtendPId}, #{roleRelyId},#{roleMaxNum},#{remarks})
	</insert>
	
	<!-- 存储某个角色和操作的对应关系 -->
	<insert id="saveRoleAndOperationRelation" parameterType="Map" keyProperty="id" useGeneratedKeys="true">
		insert into auth_role_operation (roleId, operationId) values (#{roleId}, #{operationId})
	</insert>
	
	<!-- 删除某个角色 -->
	<delete id="delete" parameterType="int" >
		delete from auth_role where id = #{id}
	</delete>
	
	<!-- 删除角色和操作的对应关系 -->
	<delete id="deleteRoleAndOperationRelation" parameterType="Map">
		delete from auth_role_operation where roleId = #{roleId} and operationId = #{operationId}
	</delete>
	
	<!-- 删除角色集 -->
	<delete id="deleteByIDs" parameterType="List">
		delete from auth_role where id in
		<foreach collection="list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<!-- 根据角色id删除角色和操作的对应关系 -->
	<delete id="deleteRoleAndOperationsRelationByRoleId" parameterType="int">
		delete from auth_role_operation where roleId = #{roleId}
	</delete>
	
	<!-- 查询某个角色根据昵称 -->
	<select id="findByName" parameterType="String" resultType="Role">
	   SELECT * FROM auth_role WHERE roleName= #{roleName}
	</select>
	
	<!-- 查询某个角色根据角色中文名称 -->
	<select id="findBydisplayName" parameterType="String" resultType="Role">
	   SELECT * FROM auth_role WHERE displayName= #{displayName}
	</select>
	
	<!-- 查询某个角色 -->
	<select id="find" parameterType="int" resultType="Role">
		SELECT
			r.*,pr.displayName rolePName,rr.displayName roleRelyName
		FROM
			auth_role r
		LEFT JOIN auth_role pr ON r.roleExtendPId = pr.id
		LEFT JOIN auth_role rr ON r.roleRelyId = rr.id 
		where r.id = #{id}
	</select>
	
	<!-- 查询全部角色 -->
	<select id="findAll" resultType="Role" parameterType="Map">
		select * from auth_role
		<include refid="paramsSQL"/>
	</select>
	
	<!-- 查询全部角色与角色拥有的用户数量-->
	<select id="findAllCount" resultType="Role" parameterType="Map">
		select r.*,count(r.id) userCount from auth_role r left join auth_user_role ur on r.id = ur.roleId
		<include refid="paramsSQL"/>
		 GROUP BY r.id
	</select>
	
	<!-- 根据角色id查询角色和操作的对应关系 -->
	<select id="findRoleAndOperationsRelationByRoleId" parameterType="int" resultType="Integer">
		select operationId from auth_role_operation where roleId = #{roleId}
	</select>
	
	<!--根据角色ID查询下属角色 -->
	<select id="findRelyRole" parameterType="int" resultType="Role">
		select * from auth_role where roleExtendPId = #{id}
	</select>
	
	<!--根据角色依赖ID查询对应的角色 -->
	<select id="findRelyId" parameterType="int" resultType="Role">
		select * from auth_role where id = #{roleRelyId}
	</select>
	
	<!--根据用户ID查询对应的角色 -->
	<select id="findByUserId" parameterType="int" resultType="Role">
		select * FROM auth_role WHERE id=any(select roleId from auth_user_role WHERE userId = #{id})
	</select>
	
	<!-- 根据角色id查询角色和操作的对应关系 -->
	<select id="findOperationByRoleId" parameterType="int" resultType="Operation">
		SELECT
			o.*
		FROM
			auth_operation o
		LEFT JOIN auth_role_operation r_o ON o.id = r_o.operationId
		LEFT JOIN auth_role r ON r.id = r_o.roleId
		WHERE
			r.id = #{roleId}
	</select>
	
	<!-- 修个某个角色 -->
	<update id="update" parameterType="Role">
		update auth_role
		<set>
			<if test="roleName != null and roleName != ''">roleName = #{roleName},</if>
			<if test="displayName != null and displayName != ''">displayName = #{displayName},</if>
			<if test="roleExtendPId != null and roleExtendPId != ''">roleExtendPId = #{roleExtendPId},</if>
			<if test="roleRelyId != null and roleRelyId != ''">roleRelyId = #{roleRelyId},</if>
			<if test="roleMaxNum != null and roleMaxNum != ''">roleMaxNum = #{roleMaxNum},</if>
			<if test="remarks != null and remarks != ''">remarks = #{remarks},</if>
			<if test="updateTime != null">updateTime = #{updateTime},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 查找角色分页查询 -->
	<select id="findPaginated" parameterType="Map" resultType="Role">
		SELECT
			r.*,pr.displayName rolePName,rr.displayName roleRelyName
		FROM
			auth_role r
		LEFT JOIN auth_role pr ON r.roleExtendPId = pr.id
		LEFT JOIN auth_role rr ON r.roleRelyId = rr.id
		<include refid="paramsSQL" />
		ORDER BY createTime desc limit #{offset}, #{limit}
	</select>
	
	<!-- 查找角色总数 -->
	<select id="getTotalOfItems" parameterType="Map" resultType="int">
		select count(*) from auth_role r
		<include refid="paramsSQL" />
	</select>
	
	<!-- 通用的设置条件的查询SQL语句 -->
	<sql id="paramsSQL">
		<where>
			<if test=" roleName != null and roleName != '' ">
				and roleName = #{roleName}
			</if>
			<if test=" roleNameLike != null and roleNameLike != '' ">
				and roleName like concat(concat('%', #{roleNameLike, jdbcType=VARCHAR}),'%')
			</if>
			
			<if test=" rNameLike != null and rNameLike != '' ">
				and r.roleName like concat(concat('%', #{rNameLike, jdbcType=VARCHAR}),'%')
			</if>
			
			<if test=" displayName != null and displayName != '' ">
				and displayName = #{displayName}
			</if>
			<if test=" displayNameLike != null and displayNameLike != '' ">
				and displayName like concat(concat('%', #{displayNameLike, jdbcType=VARCHAR}),'%')
			</if>
			<if test=" dNameLike != null and dNameLike != '' ">
				and r.displayName like concat(concat('%', #{dNameLike, jdbcType=VARCHAR}),'%')
			</if>
			
			<if test=" roleExtendPId != null and roleExtendPId != '' ">
				and roleExtendPId = #{roleExtendPId}
			</if>
			<if test=" roleExtendPIdLike != null and roleExtendPIdLike != '' ">
				and roleExtendPId like concat(concat('%', #{roleExtendPIdLike, jdbcType=INTEGER}),'%')
			</if>
			
			<if test=" roleRelyId != null and roleRelyId != '' ">
				and roleRelyId = #{roleRelyId}
			</if>
			<if test=" roleRelyIdLike != null and roleRelyIdLike != '' ">
				and roleRelyId like concat(concat('%', #{roleRelyIdLike, jdbcType=INTEGER}),'%')
			</if>
			
			<if test=" roleMaxNum != null and roleMaxNum != '' ">
				and roleMaxNum = #{roleMaxNum}
			</if>
			<if test=" roleMaxNumLike != null and roleMaxNumLike != '' ">
				and roleMaxNum like concat(concat('%', #{roleMaxNumLike, jdbcType=INTEGER}),'%')
			</if>
		</where>
	</sql>
	
</mapper>