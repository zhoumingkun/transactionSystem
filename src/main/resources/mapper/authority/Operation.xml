<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toughguy.transactionSystem.model.authority.Operation">
	
	<!-- 增加操作 -->
	<insert id="save" parameterType="Operation" keyProperty="id" useGeneratedKeys="true">
		insert into auth_operation (guid, createTime,updateTime,operationName, displayName,resourceId,operationRId,permission) values 
		(#{guid}, #{createTime},#{updateTime},#{operationName},#{displayName},#{resourceId},#{operationRId},#{permission})
	</insert>
	
	<!-- 更新操作 -->
	<update id="update" parameterType="Operation">
		update auth_operation
		<set>
			<if test="operationName != null and operationName != ''">operationName = #{operationName},</if>
			<if test="displayName != null and displayName != ''">displayName = #{displayName},</if>
			<if test="resourceId != null and resourceId != ''">resourceId = #{resourceId},</if>
			<if test="operationRId != null and operationRId != ''">operationRId = #{operationRId},</if>
			<if test="permission != null and permission != ''">permission = #{permission},</if>
			<if test="updateTime != null ">updateTime = #{updateTime},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 删除操作 -->
	<delete id="delete" parameterType="int">
		delete from auth_operation where id = #{id}
	</delete>
	
	<!-- 删除操作 -->
	<delete id="deleteRoleAndOperation" parameterType="int">
		delete from auth_role_operation where operationId = #{id}
	</delete>
	
	<!-- 删除全部操作  -->
	<delete id="deleteAll">
		delete from auth_operation
	</delete>
	
	<!-- 删除全部操作根据资源id  -->
	<delete id="deleteAllByResourceId"  parameterType="int">
		delete from auth_operation where resourceId = #{resourceId}
	</delete>
	
	<!-- 删除操作集 -->
	<delete id="deleteByIDs" parameterType="List">
		delete from auth_operation where id in
		<foreach collection="list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<!-- 根据操作Id查询角色对应操作表的id -->
	<!-- <select id="findResultId" resultType="int" parameterType="int">
		select * from auth_operation
	</select> -->
	
	<!-- 查找操作 -->
	<select id="find" resultType="Operation" parameterType="int">
		select * from auth_operation
		where id=#{id}
	</select>
	
	<!-- 查找全部操作 -->
	<select id="findAll" resultType="Operation" parameterType="Map">
		select * from auth_operation
		<include refid="paramsSQL"/>
		order by id asc
	</select>
	
	<!-- 根据角色ID查找操作 -->
	<select id="findByRoleId" resultType="Operation" parameterType="int">
		SELECT b.* from auth_role_operation a,auth_operation b where a.roleId = #{roleId} and a.operationId = b.id
	</select>
	
	<!-- 根据资源ID查找操作 -->
	<select id="findById" resultType="Operation" parameterType="int">
		select * from auth_operation where resourceId = #{id} 
	</select>
	
	<!-- 根据依赖ID查找操作 -->
	<select id="findOperation" resultType="Operation" parameterType="int">
		select * from auth_operation where id = #{operationRId} 
	</select>
	
	<!-- 根据用户ID查找操作 -->
	<select id="findByUserId" resultType="Operation" parameterType="int">
	select distinct   c.* from auth_user_role a,auth_role_operation b,auth_operation c where a.userId =#{userId} and a.roleId = b.roleId AND b.operationId = c.id
	</select>
	
	<!-- 分页查找 -->
	<select id="findPaginated" parameterType="Map" resultType="Operation">
		select * from auth_operation 
		<include refid="paramsSQL" />
		 ORDER BY createTime desc limit #{offset}, #{limit} 
	</select>
	
	<!-- 查找总数 -->
	<select id="getTotalOfItems" parameterType="Map" resultType="int">
		select count(*) from auth_operation 
		<include refid="paramsSQL" />
	</select>
	
	<!-- 通用的设置条件的查询SQL语句 -->
	<sql id="paramsSQL">
		<where>
			<if test="operationName != null and operationName != ''">
				and operationName = #{operationName, jdbcType=VARCHAR}
			</if>
			<if test=" operationNameLike != null and operationNameLike != '' ">
				and operationName like concat(concat('%', #{operationNameLike, jdbcType=VARCHAR}),'%')
			</if>
			<if test="displayName != null and displayName != ''">
				and displayName = #{displayName, jdbcType=VARCHAR}
			</if>
			<if test=" displayNameLike != null and displayNameLike != '' ">
				and displayName like concat(concat('%', #{displayNameLike, jdbcType=VARCHAR}),'%')
			</if>
			<if test=" resourceId != null and resourceId != '' ">
				and resourceId = #{resourceId, jdbcType=INTEGER}
			</if>
			<if test=" resourceIdLike != null and resourceIdLike != '' ">
				and resourceId like concat(concat('%', #{resourceIdLike, jdbcType=INTEGER}),'%')
			</if>
			<if test=" operationRId != null and operationRId != '' ">
				and operationRId #{operationRId, jdbcType=INTEGER}
			</if>
			<if test=" operationRIdLike != null and operationRIdLike != '' ">
				and operationRId like concat(concat('%', #{operationRIdLike, jdbcType=INTEGER}),'%')
			</if>
		</where>
	</sql>
	
</mapper>